#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Get-Openwrt-Lean

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 0 * * 5

env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_BRANCH: master
  FEEDS_CONF: RM2100.feeds.openwrt.lean.conf
  CONFIG_FILE: RM2100.openwrt.lean.config
  DIY_SH: RM2100.openwrt.lean.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_TAR: true
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    - name: Load custom feeds
      run: |
        [ -e files ] && mv files openwrt/files
        mv $GITHUB_WORKSPACE/$FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH
        sed -i '$a src-git helloworld https://github.com/fw876/helloworld' feeds.conf.default
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
      
#    - name: RM
#      run: |
#           cd openwrt 
#           rm -rf feeds/lienol/lienol/ipt2socks
#           rm -rf feeds/lienol/lienol/shadowsocksr-libev
#           rm -rf feeds/lienol/lienol/pdnsd-alt
#           rm -rf feeds/lienol/package/verysync
#           rm -rf feeds/lienol/lienol/luci-app-verysync
    - name: Install feeds
    
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        mv $GITHUB_WORKSPACE/$CONFIG_FILE openwrt/.config

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: tar
      id: tar
#      if: env.UPLOAD_TAR == 'true' && !cancelled()
      run: |
        cd /workdir
        tar czf - openwrt | split -b 1000m - openwrt.tar.gz 
        
    - name: Upload openwrt.tar.gzaa to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        if [ -e /workdir/openwrt.tar.gzaa ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzaa 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")" 
        fi
    - name: sleep 5a
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzaa ]; then
        sleep 5m
        fi        
    - name: Upload openwrt.tar.gzab to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        if [ -e /workdir/openwrt.tar.gzab ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzab 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"  
        fi
    - name: sleep 5b
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzab ]; then
        sleep 5m
        fi
      
    - name: Upload openwrt.tar.gzac to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |
        if [ -e /workdir/openwrt.tar.gzac ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzac 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"  
        fi
    - name: sleep 5c
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzac ]; then
        sleep 5m
        fi
    - name: Upload openwrt.tar.gzad to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |
        if [ -e /workdir/openwrt.tar.gzad ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzad 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"  
        fi
    - name: sleep 5d
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzad ]; then
        sleep 5m
        fi
      
    - name: Upload openwrt.tar.gzae to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |
        if [ -e /workdir/openwrt.tar.gzae ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzae 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")" 
        fi
    - name: sleep 5e
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzae ]; then
        sleep 5m
        fi 
      
    - name: Upload openwrt.tar.gzaf to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |
        if [ -e /workdir/openwrt.tar.gzaf ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzaf 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"  
        fi
    - name: sleep 5f
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzaf ]; then
        sleep 5m
        fi      
    - name: Upload openwrt.tar.gzag to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |
        if [ -e /workdir/openwrt.tar.gzag ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzag 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"  
        fi
    - name: sleep 5g
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzag ]; then
        sleep 5m
        fi     
      
    - name: Upload openwrt.tar.gzah to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |
        if [ -e /workdir/openwrt.tar.gzah ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzah 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"  
        fi
    - name: sleep 5h
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzah ]; then
        sleep 5m
        fi
    - name: Upload openwrt.tar.gzai to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |
        if [ -e /workdir/openwrt.tar.gzai ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzai 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"  
        fi
    - name: sleep 5i
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzai ]; then
        sleep 5m
        fi
      
    - name: Upload openwrt.tar.gzaj to WeTransfer
      if: env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        if [ -e /workdir/openwrt.tar.gzaj ]; then
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress /workdir/openwrt.tar.gzaj 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"  
        fi
    - name: Upload openwrt.tar.gzaa to cowtransfer
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: | 
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzaa 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
    - name: sleep 5a
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzaa ]; then
        sleep 5m
        fi
      
    - name: Upload openwrt.tar.gzab to cowtransfer
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzab 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"  
    - name: sleep 5b
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzab ]; then
        sleep 5m
        fi
             
        
    - name: Upload openwrt.tar.gzac to cowtransfer
      if: env.UPLOAD_TAR == 'true' && !cancelled()
      run: |  
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzac 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
    - name: sleep 5c
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzac ]; then
        sleep 5m
        fi
             
    - name: Upload openwrt.tar.gzad to cowtransfer
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzad 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")" 
    - name: sleep 5d
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzad ]; then
        sleep 5m
        fi
             
    - name: Upload openwrt.tar.gzae to cowtransfer
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: | 
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzae 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")" 
    - name: sleep 5e
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzae ]; then
        sleep 5m
        fi
             
    - name: Upload openwrt.tar.gzaf to cowtransfer
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzaf 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"  
    - name: sleep 5f
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzaf ]; then
        sleep 5m
        fi
             
    - name: Upload openwrt.tar.gzag to cowtransfer
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzag 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")" 
    - name: sleep 5g
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzag ]; then
        sleep 5m
        fi
             
    - name: Upload openwrt.tar.gzah to cowtransfer
      if: env.UPLOAD_TAR == 'true' && !cancelled()
      run: |  
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzah 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"  
    - name: sleep 5h
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzah ]; then
        sleep 5m
        fi
             
    - name: Upload openwrt.tar.gzai to cowtransfer
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzai 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"  
    - name: sleep 5i
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzai ]; then
        sleep 5m
        fi
             
    - name: Upload openwrt.tar.gzaj to cowtransfer 
      if: env.UPLOAD_TAR == 'true' && !cancelled()
      run: |  
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress /workdir/openwrt.tar.gzaj 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")" 
    - name: sleep 5j
      if: env.UPLOAD_TAR == 'true' && !cancelled() 
      run: |  
        if [ -e /workdir/openwrt.tar.gzaj ]; then
        sleep 5m
        fi
        


    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 2

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 15
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
